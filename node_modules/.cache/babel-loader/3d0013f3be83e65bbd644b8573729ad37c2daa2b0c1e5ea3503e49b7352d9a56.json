{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\counter-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  state = {\n    counters: [{\n      id: 1,\n      value: 4\n    }, {\n      id: 2,\n      value: 0\n    }, {\n      id: 3,\n      value: 0\n    }, {\n      id: 4,\n      value: 0\n    }]\n  };\n  handleIncrement = counter => {\n    const counters = [...this.state.counters]; // use spread operator to clone the counters array to new counters array\n    const index = counters.indexOf(counter);\n    counters[index] = {\n      ...counter\n    };\n    counters[index].value++;\n    this.setState({\n      counters\n    });\n  };\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({\n      counters\n    });\n  };\n  handleDelete = counterId => {\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({\n      counters\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Counters, {\n        counters: this.state.counters,\n        onReset: this.handleReset,\n        onIncrement: this.handleIncrement,\n        onDelete: this.handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","NavBar","Counters","jsxDEV","_jsxDEV","App","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleReset","map","c","handleDelete","counterId","filter","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onReset","onIncrement","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/hp/Documents/counter-app/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\n\n\nfunction App() {\n  \n    state = {\n      counters: [\n          {id: 1, value: 4},\n          {id: 2, value: 0},\n          {id: 3, value: 0},\n          {id: 4, value: 0}\n      ]\n    };\n\n  handleIncrement = counter => {\n      const counters = [...this.state.counters];// use spread operator to clone the counters array to new counters array\n      const index = counters.indexOf(counter);\n      counters [index] = {...counter};\n      counters[index].value++;\n      this.setState({counters});\n  };\n  \n    handleReset = () => {\n      const counters = this.state.counters.map(c => {\n          c.value = 0;\n          return c;\n      });\n      this.setState({counters});\n  };\n\n    handleDelete = (counterId) => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({counters});\n  }\n  return(\n    <React.Fragment>\n    <NavBar/>\n    <main className='container'>\n      <Counters\n      counters = {this.state.counters}\n      onReset = {this.handleReset}\n      onIncrement = {this.handleIncrement}\n      onDelete = {this.handleDelete}\n      />\n    </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,GAAGA,CAAA,EAAG;EAEXC,KAAK,GAAG;IACNC,QAAQ,EAAE,CACN;MAACC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAC,CAAC,EACjB;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAC,CAAC,EACjB;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAC,CAAC,EACjB;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAC,CAAC;EAEvB,CAAC;EAEHC,eAAe,GAAGC,OAAO,IAAI;IACzB,MAAMJ,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,CAAC;IAC1C,MAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAO,CAACF,OAAO,CAAC;IACvCJ,QAAQ,CAAEK,KAAK,CAAC,GAAG;MAAC,GAAGD;IAAO,CAAC;IAC/BJ,QAAQ,CAACK,KAAK,CAAC,CAACH,KAAK,EAAE;IACvB,IAAI,CAACK,QAAQ,CAAC;MAACP;IAAQ,CAAC,CAAC;EAC7B,CAAC;EAECQ,WAAW,GAAGA,CAAA,KAAM;IAClB,MAAMR,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACS,GAAG,CAACC,CAAC,IAAI;MAC1CA,CAAC,CAACR,KAAK,GAAG,CAAC;MACX,OAAOQ,CAAC;IACZ,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAAC;MAACP;IAAQ,CAAC,CAAC;EAC7B,CAAC;EAECW,YAAY,GAAIC,SAAS,IAAK;IAC5B,MAAMZ,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACa,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKW,SAAS,CAAC;IACpE,IAAI,CAACL,QAAQ,CAAC;MAACP;IAAQ,CAAC,CAAC;EAC7B,CAAC;EACD,oBACEH,OAAA,CAACL,KAAK,CAACsB,QAAQ;IAAAC,QAAA,gBACflB,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTtB,OAAA;MAAMuB,SAAS,EAAC,WAAW;MAAAL,QAAA,eACzBlB,OAAA,CAACF,QAAQ;QACTK,QAAQ,EAAI,IAAI,CAACD,KAAK,CAACC,QAAS;QAChCqB,OAAO,EAAI,IAAI,CAACb,WAAY;QAC5Bc,WAAW,EAAI,IAAI,CAACnB,eAAgB;QACpCoB,QAAQ,EAAI,IAAI,CAACZ;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAErB;AAACK,EAAA,GA5CQ1B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}