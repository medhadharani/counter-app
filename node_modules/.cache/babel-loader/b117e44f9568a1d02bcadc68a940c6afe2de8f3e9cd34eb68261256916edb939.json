{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\counter-app\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 1,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 49\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n  getBadgeClasses() {\n    // create method to add bootstrap for formatCount, Here first initiate a variable and assign the common part of classname for that.\n    let classes = 'badge m-2 text-bg-';\n    classes += this.state.count === 0 ? 'warning' : 'primary';\n    return classes;\n  }\n  formatCount() {\n    //create a method to print count as zero for 0 and otherwise numbers.\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n}\nexport default Counter;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Counter","constructor","args","state","count","tags","render","children","className","getBadgeClasses","formatCount","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","classes"],"sources":["C:/Users/hp/Documents/counter-app/src/components/counter.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        count: 1,\r\n        tags: ['tag1', 'tag2', 'tag3']\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                <button className='btn btn-secondary btn-sm'>Increment</button>\r\n                <ul>{this.state.tags.map(tag => <li key = {tag}>{tag}</li>)}</ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getBadgeClasses() { // create method to add bootstrap for formatCount, Here first initiate a variable and assign the common part of classname for that.\r\n        let classes = 'badge m-2 text-bg-';\r\n        classes += this.state.count === 0 ? 'warning' : 'primary';\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){ //create a method to print count as zero for 0 and otherwise numbers.\r\n        const {count} = this.state;\r\n        return count === 0 ? 'Zero' : count;\r\n    }\r\n}\r\n \r\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,OAAO,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC5BC,KAAK,GAAG;MACJC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM;IACjC,CAAC;EAAA;EAEDC,MAAMA,CAAA,EAAG;IAEL,oBACIP,OAAA;MAAAQ,QAAA,gBACIR,OAAA;QAAMS,SAAS,EAAE,IAAI,CAACC,eAAe,CAAC,CAAE;QAAAF,QAAA,EAAE,IAAI,CAACG,WAAW,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpEf,OAAA;QAAQS,SAAS,EAAC,0BAA0B;QAAAD,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/Df,OAAA;QAAAQ,QAAA,EAAK,IAAI,CAACJ,KAAK,CAACE,IAAI,CAACU,GAAG,CAACC,GAAG,iBAAIjB,OAAA;UAAAQ,QAAA,EAAiBS;QAAG,GAATA,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAEd;EAEAL,eAAeA,CAAA,EAAG;IAAE;IAChB,IAAIQ,OAAO,GAAG,oBAAoB;IAClCA,OAAO,IAAI,IAAI,CAACd,KAAK,CAACC,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;IACzD,OAAOa,OAAO;EAClB;EAEAP,WAAWA,CAAA,EAAE;IAAE;IACX,MAAM;MAACN;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC1B,OAAOC,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,KAAK;EACvC;AACJ;AAEA,eAAeJ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}